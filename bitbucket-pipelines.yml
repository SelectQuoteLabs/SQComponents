image: node:carbon

definitions:
  caches:
    clientnode: client/node_modules
  services:
    docker:
      memory: 3072

# Repeatable Steps
testStep: &testStep
  - step:
    name: Default Test Step
    caches:
      - clientnode
    script:
      - echo "Running client and build steps..."
      - cd client && npm ci
      - echo "Running lint on the client directory..."
      - npm run lint
      - echo "Running test and build steps..."
      - npm test
nodeBuild: &nodeBuild
  name: Node Install and Publish
  caches:
    - clientnode
  script:
    - npm ci && npm semantic-release
    - npm run publish
commonBuildAndDeploy: &commonBuildAndDeploy
  name: Build & Deploy
  image: tstrohmeier/awscli:3.6.4
  script:
    - pip install -U awscli
    - eval $(aws ecr get-login --region ${AWS_DEFAULT_REGION} --no-include-email)
    - export LABEL=${AWS_REGISTRY_URL}:${ENVIRONMENT}_${BITBUCKET_BUILD_NUMBER}
    - >
      docker build
      -t $LABEL
      --build-arg ENVIRONMENT=${ENVIRONMENT}
      .
    - docker push $LABEL
    - sed -i -e "s|__LABEL__|$LABEL|g" task-definition.json
    - sed -i -e "s|__ENV__|${ENV}|g" task-definition.json
    - sed -i -e "s|__EXECUTION_ROLE_ARN__|${EXECUTION_ROLE}|g" task-definition.json
    - sed -i -e "s|__TASK_ROLE_ARN__|${TASK_ROLE}|g" task-definition.json
    - sed -i -e "s|__NGINX_REPO__|${NGINX_REPO}|g" task-definition.json 
    - >
      aws ecs register-task-definition
      --family scplus-shared-components
      --cli-input-json file://task-definition.json
    - >
      aws ecs update-service
      --service scplus-shared-components
      --task-definition scplus-shared-components
      --cluster SharedServices
  services:
    - docker

pipelines:
  default:
    - <<: *testStep
  custom:
    production:
      - step:
          deployment: production
          <<: *nodeBuild
          <<: *commonBuildAndDeploy
  branches:
    master:
      - step:
          deployment: production
          <<: *nodeBuild
          <<: *commonBuildAndDeploy
